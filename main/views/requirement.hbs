<link rel='stylesheet' type="text/css"  href='/stylesheets/requirement.css' />
<div class="container">
    <h2>{{title}}</h2>
    <div class="row">
        <div class="col-xs-12">
            <div class="row">
                <div class="col-sm-9 col-xs-12">
                    <h3 id="chapter1">1.0 Introduction</h3>
                    <p>This provides overview of the software development requirements such as various kinds of Use case, functional model, ERD etc required for development of the system.</p>
                    <h3 id="chapter1-1">1.1 Goals and objectives</h3>
                    <p>The main goals of this application is to build a small repository of school books which support different kinds of operations for users. The objective of this software developments lies in how well the requirements are understood and how this can be developed using proper planned phases in different modules.</p>
                    <p>The application shall track books, classes and students who check out books. Each books has a unique school generated ID. A total number of books shall be tracked. The ability to add/update/delete all information is required. Numeric key fields should be automatically generated. Such as book ID, Student Id, Staff ID.Security is required.  All users must be granted access to the system before they can use it. Access must be based on levels.The system must respond to all requests within 5 seconds. The application shall list all students with books checked out showing due date and date checked out. List all authorized users and their access level. List all books in the system with search capabilities. List all orders by order type (Pc Repair Orders, etc.). List of all books checked out by class or book name/number. List of students and parents info with amount due
                        What’s more, each Book is identified with an ISBN number and unique school generated number. Each student can check out up to the number of classes he/she is registered for. Each staff/teacher is assigned a unique user id and an ID. Books data needs to be stored in a database of some sort and the data can be obtained from an online web service (google books, Amazon or any other source). Each class the school offer must be recorded in the database.</p>
                    <h3 id="chapter1-2">1.2 Statement of scope</h3>
                    <p>The Scope of the Project is to provide a interface to the customers that can interact with the system on a web based form which generates the list of order or repairs etc to the administrator and also to the customer. This kind of format is very reasonable to manage and maintain for both administrator and to the customer. The List of major input, processing etc is presented below and their ranks are also specified.
                    </p>
                    <p>The application shall be accessible through either a laptop or desktop computer on website. It shall prompt the user for a username and password. Upon entering this information correctly, the user shall have access to the repository of school books. For the users, they shall be able to search and check out books which is essential for the course. In additional, the users shall able to view the capabilities of books. Most importantly, the user shall be able to view the current state of the orders. The users shall do this by requesting a report from the system. The report shall display, according to the type of report requested, either:</p>
                    <p>1.All students with books checked out showing due date and date checked out.</p>
                    <p>2.All authorized users and their access level.</p>
                    <p>3.All books in the system with search capabilities.</p>
                    <p>4.All orders by order type.</p>
                    <p>5.All books checked out by class or book name/number.</p>
                    <p>In the case that a new book is offered by the store, the administrator shall have the capability to add new items into the repository for tracking. To help maintain the current repository state, the administrator shall have the ability to update the quantity of books in repository when books are checked out. In order to update the information, the administrator will have to enter the number of books checked out, the due date. The administrator shall also be able to delete books in the case that they are no longer offered. Every book shall be differentiated by an ISBN number. Similar codes shall be created for the purpose of identifying students and teachers.</p>
                    <p>In the case that a student or a teacher contact information should change, the administrator shall be able to update the contact information for the students or teachers. The administrator shall also have the ability to delete information of students or teachers.The administrator shall be able to add, update, and delete order information in the same way that he/she is able to do for a customer's information. In additional, the administrator shall search all the access level of authorized users and shall view all books checked out by class or book name/number.</p>
                    <p>The customer list shall be maintained in a similar way to the books. When a student or teacher wants to check out some books, the system will list all the information of books through searching by book’s name or ISBN number. When students or teachers check out some books, system will automatically decrease the amount of books in the tracking portion of the system for repository. Students shall able to view the due date and the date checked out of books they checked out and check our up to the number of  classes he/she is registered for through entering their ID.</p>
                    <p>Please see the table on the next page for more details on the system's requirements and capabilities.</p>
                    <table class="req-table">
                        <tr>
                            <th>REQ.No</th>
                            <th>DESCRIPTION </th>
                            <th>RANK</th>
                            <th>TESTED</th>
                        </tr>
                        <tr>
                            <td>1</td>
                            <td>Navigation: HTMLLinks, Control</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>2</td>
                            <td>Data Entry : HTML Form</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>3</td>
                            <td>Database : SQL server</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>4</td>
                            <td>NBooks list</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>5</td>
                            <td>Username and password</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>6</td>
                            <td>Book ISBN number</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>7</td>
                            <td>Customer info : Personal data</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>8</td>
                            <td>Customer info : Place order</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>9</td>
                            <td>Customer info : Delete order</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>10</td>
                            <td>Customer info : Update order</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>11</td>
                            <td>Customer info : Track order</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>12</td>
                            <td>Customer log note</td>
                            <td>Desired</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>13</td>
                            <td>Administrator Security Privileges</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>14</td>
                            <td>Type of books and description</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>15</td>
                            <td>Important Notifications and Updates</td>
                            <td>Desired</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>16</td>
                            <td>Order : Order List</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>17</td>
                            <td>Order : More number of orders</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>18</td>
                            <td>Reports : List all customer with  access level</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>19</td>
                            <td>Reports : List students and books with due date and date checked out</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>20</td>
                            <td>Reports : List books with capabilities</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>21</td>
                            <td>Reports : List orders by type</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr class="alter">
                            <td>22</td>
                            <td>Reports : List books checked out by class or book name/number</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                        <tr>
                            <td>23</td>
                            <td>Reports : List students info with amount due</td>
                            <td>Essential</td>
                            <td>No</td>
                        </tr>
                    </table>
                    <h3 id="chapter1-3">1.3 Software context</h3>
                    <p>The software designed will be a web based application. It basically consists of 3 tier architecture. Application server (tomcat) will handle the application. The application will communicate to the database (SQL Server) to retrieve information. The clients will use a browser (Mozilla Firefox, internet explorer) to access the application.</p>
                    <p>As a business grows, it becomes increasingly important to efficiently maintain and document the flow of its merchandise in order to keep an orderly account of changes to its books. The system shall not only allow multiple users to maintain an up-to-date account of the book repository, it will also help link its inventory to both the vendors who supply the products and the customers who purchase them. The system will help the repository sustain enough books on hand without leading to oversupply. It will also help streamline the relationship management process of the repository by keeping current contact information for both administrator and customers. The centralized nature of the system will not only help the repository simplify its current operations, but grow and build upon its existing business as well.</p>
                    <h3 id="chapter1-4">1.4 Major constraints</h3>
                    <p>The major constraints in the development are that the system should respond within the required constraint described in the project manual. The software is developed keeping in mind about the needs of the customer and their interaction between the system. The software is designed to give the best efficiency possible. It is also organized to fix quick errors or bugs.</p>
                </div>
                <div class="col-sm-3 col-xs-12">
                    <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix">
                        <ul class="nav bs-docs-sidenav">
                            <li class="">
                                <a href="#chapter1">1.0 Introduction</a>
                                <ul class="nav">
                                    <li class=""><a href="#chapter1-1">1.1 Goals and objectives</a></li>
                                    <li><a href="#chapter1-2">1.2 Statement of scope</a></li>
                                    <li><a href="#chapter1-3">1.3 Software context</a></li>
                                    <li><a href="#chapter1-4">1.4 Major constraints</a></li>
                                </ul>
                            </li>
                            <li class="">
                                <a href="#chapter2">2.0 Usage scenario</a>
                                <ul class="nav">
                                    <li><a href="#chapter2-1">2.1 User profiles</a></li>
                                    <li><a href="#chapter2-2">2.2 Use-cases</a></li>
                                    <li><a href="#chapter2-2-1">2.2.1 Use-Case Diagrams</a></li>
                                    <li><a href="#chapter2-2-2">2.2.2 Use-Case Descriptions</a></li>
                                    <li><a href="#chapter2-3">2.3 Special usage considerations</a></li>
                                    <li><a href="#chapter2-4">2.4 Activity Diagrams</a></li>
                                </ul>
                            </li>
                            <li class="">
                                <a href="#chapter3">3.0 Data Model and Descrpition</a>
                                <ul class="nav">
                                    <li><a href="#chapter3-1">3.1 Data objects</a></li>
                                    <li><a href="#chapter3-2">3.2 Relationships</a></li>
                                    <li><a href="#chapter3-3">3.3 Complete data model</a></li>
                                </ul>
                            </li>
                            <li>
                                <a href="#chapter4">4.0 Functional Model and Description</a>
                                <ul class="nav">
                                    <li><a href="#chapter4-1">4.1 Class diagrams</a></li>
                                    <li><a href="#chapter4-2">4.2 Software Interface Description</a></li>
                                    <li><a href="#chapter4-2-1">4.2.1 External machine interfaces</a></li>
                                    <li><a href="#chapter4-2-2">4.2.2 External system interfaces</a></li>
                                </ul>
                            </li>
                            <li>
                                <a href="#chapter5">5.0 Behavioral Model and Description</a>
                                <ul class="nav">
                                    <li><a href="#chapter5-1">5.1 Description for software behavior</a></li>
                                    <li><a href="#chapter5-1-1">5.1.1 Events</a></li>
                                    <li><a href="#chapter5-1-2">5.1.2 States</a></li>
                                    <li><a href="#chapter5-2">5.2 Statechart Diagram</a></li>
                                </ul>
                            </li>
                            <li>
                                <a href="#chapter6">6.0 Restrictions, Limitations, and Constraints</a>
                                <ul class="nav">
                                </ul>
                            </li>
                            <li>
                                <a href="#chapter7">7.0 Validation Criteria</a>
                                <ul class="nav">
                                    <li><a href="#chapter7-1">7.1 Classes of tests</a></li>
                                    <li><a href="#chapter7-2">7.2 Expected software response</a></li>
                                    <li><a href="#chapter7-3">7.3 Performance bounds</a></li>
                                </ul>
                            </li>
                        </ul>
                        <a class="back-to-top" href="#top">
                            Back to top
                        </a>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {
        var sn = $('.bs-docs-sidenav'),sl =sn.children('li');
        sl.on('click',function () {
            sn.find('.nav').css('display','none');
            sl.removeClass('active');
            $(this).addClass('active');
            $(this).children('.nav').css('display','block');
        })
    })
</script>


